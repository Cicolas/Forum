insert into
  contributions (id, author_id, content)
values
  ('contribution-id1', 'user-id1', 'Machine learning is a subset of artificial intelligence that focuses on enabling machines to learn from data and improve their performance over time without being explicitly programmed. At its core, machine learning algorithms analyze large datasets to identify patterns and make predictions or decisions based on that data.\nThere are three main types of machine learning: supervised learning, unsupervised learning, and reinforcement learning.\nIn supervised learning, the algorithm is trained on labeled data, meaning that each input is associated with a corresponding output. The goal is to learn a mapping from inputs to outputs, allowing the algorithm to make predictions on new, unseen data.\nUnsupervised learning involves training the algorithm on unlabeled data, where the goal is to discover hidden patterns or structures within the data. Clustering and dimensionality reduction are common tasks in unsupervised learning.'),
  ('contribution-id2', 'user-id2', 'Software engineering is the systematic approach to developing, operating, and maintaining software systems. Adhering to best practices ensures that software projects are completed efficiently, with high quality, and meet the needs of stakeholders.\nRequirement Analysis: Begin with a thorough understanding of user requirements to ensure the software meets user needs effectively.\nDesign Principles: Follow design principles such as modularity, abstraction, and separation of concerns to create flexible and maintainable software architectures.\nVersion Control: Use version control systems like Git to manage changes to source code, enabling collaboration among team members and facilitating code review processes.\nAutomated Testing: Implement automated testing frameworks to verify the correctness and robustness of software components, reducing the likelihood of bugs and errors.\nContinuous Integration/Continuous Deployment (CI/CD): Integrate automated testing and deployment processes into the development workflow to ensure frequent, reliable releases of software updates.'),
  ('contribution-id3', 'user-id3', 'Programming languages have undergone significant evolution since the inception of computing. From early machine languages and assembly languages to high-level languages and domain-specific languages, each stage has brought new features, paradigms, and improvements to the process of writing software.\nMachine Code: In the earliest days of computing, programmers wrote instructions directly in machine code, which consisted of binary instructions understood by the computer hardware. This approach was tedious and error-prone.\nAssembly Language: Assembly languages introduced mnemonic codes that represented machine instructions, making programming more human-readable and easier to understand. Programmers wrote code using mnemonics, which were then translated into machine code by an assembler.\nProcedural Languages: Procedural languages like Fortran, COBOL, and C introduced higher-level abstractions such as functions and loops, allowing programmers to write more structured and maintainable code. These languages focused on describing the steps required to solve a problem sequentially.');

insert into
  posts (id, title)
values
  ('contribution-id1', 'Machine Learning Basics: An Overview'),
  ('contribution-id2', 'Software Engineering Best Practices'),
  ('contribution-id3', 'The Evolution of Programming Languages');
